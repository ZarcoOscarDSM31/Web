{"ast":null,"code":"var _jsxFileName = \"/home/oscar/M\\xFAsica/Hidroponia/frontend/src/components/calidadAire.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AirQualityComponent = ({\n  ppmCO2\n}) => {\n  _s();\n  const [airQuality, setAirQuality] = useState('');\n  useEffect(() => {\n    const calculateAirQuality = () => {\n      if (ppmCO2 < 400) {\n        return \"Excelente\";\n      } else if (ppmCO2 < 1000) {\n        return \"Normal\";\n      } else if (ppmCO2 < 2000) {\n        return \"Pobre\";\n      } else if (ppmCO2 < 5000) {\n        return \"Mala\";\n      } else {\n        return \"Muy mala\";\n      }\n    };\n    setAirQuality(calculateAirQuality());\n  }, [ppmCO2]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `air-quality p-4 rounded-lg ${airQualityClasses[airQuality]}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"font-bold text-lg mb-2\",\n      children: \"Calidad del aire:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-xl\",\n      children: airQuality\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n// Define las clases de Tailwind condicionales para cada calidad del aire\n_s(AirQualityComponent, \"ps8aGgl+67t4uZiBXJO9AVU7RnU=\");\n_c = AirQualityComponent;\nconst airQualityClasses = {\n  'Excelente': 'bg-green-200',\n  'Normal': 'bg-blue-200',\n  'Pobre': 'bg-yellow-200',\n  'Mala': 'bg-red-200',\n  'Muy mala': 'bg-red-500'\n};\nexport default AirQualityComponent;\nvar _c;\n$RefreshReg$(_c, \"AirQualityComponent\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","AirQualityComponent","ppmCO2","_s","airQuality","setAirQuality","calculateAirQuality","className","airQualityClasses","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/oscar/MÃºsica/Hidroponia/frontend/src/components/calidadAire.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst AirQualityComponent = ({ ppmCO2 }) => {\r\n  const [airQuality, setAirQuality] = useState('');\r\n\r\n  useEffect(() => {\r\n    const calculateAirQuality = () => {\r\n      if (ppmCO2 < 400) {\r\n        return \"Excelente\";\r\n      } else if (ppmCO2 < 1000) {\r\n        return \"Normal\";\r\n      } else if (ppmCO2 < 2000) {\r\n        return \"Pobre\";\r\n      } else if (ppmCO2 < 5000) {\r\n        return \"Mala\";\r\n      } else {\r\n        return \"Muy mala\";\r\n      }\r\n    };\r\n\r\n    setAirQuality(calculateAirQuality());\r\n  }, [ppmCO2]);\r\n\r\n  return (\r\n    <div className={`air-quality p-4 rounded-lg ${airQualityClasses[airQuality]}`}>\r\n      <h2 className=\"font-bold text-lg mb-2\">Calidad del aire:</h2>\r\n      <p className=\"text-xl\">{airQuality}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Define las clases de Tailwind condicionales para cada calidad del aire\r\nconst airQualityClasses = {\r\n  'Excelente': 'bg-green-200',\r\n  'Normal': 'bg-blue-200',\r\n  'Pobre': 'bg-yellow-200',\r\n  'Mala': 'bg-red-200',\r\n  'Muy mala': 'bg-red-500',\r\n};\r\n\r\nexport default AirQualityComponent;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMQ,mBAAmB,GAAGA,CAAA,KAAM;MAChC,IAAIJ,MAAM,GAAG,GAAG,EAAE;QAChB,OAAO,WAAW;MACpB,CAAC,MAAM,IAAIA,MAAM,GAAG,IAAI,EAAE;QACxB,OAAO,QAAQ;MACjB,CAAC,MAAM,IAAIA,MAAM,GAAG,IAAI,EAAE;QACxB,OAAO,OAAO;MAChB,CAAC,MAAM,IAAIA,MAAM,GAAG,IAAI,EAAE;QACxB,OAAO,MAAM;MACf,CAAC,MAAM;QACL,OAAO,UAAU;MACnB;IACF,CAAC;IAEDG,aAAa,CAACC,mBAAmB,CAAC,CAAC,CAAC;EACtC,CAAC,EAAE,CAACJ,MAAM,CAAC,CAAC;EAEZ,oBACEF,OAAA;IAAKO,SAAS,EAAG,8BAA6BC,iBAAiB,CAACJ,UAAU,CAAE,EAAE;IAAAK,QAAA,gBAC5ET,OAAA;MAAIO,SAAS,EAAC,wBAAwB;MAAAE,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7Db,OAAA;MAAGO,SAAS,EAAC,SAAS;MAAAE,QAAA,EAAEL;IAAU;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEV,CAAC;;AAED;AAAAV,EAAA,CA7BMF,mBAAmB;AAAAa,EAAA,GAAnBb,mBAAmB;AA8BzB,MAAMO,iBAAiB,GAAG;EACxB,WAAW,EAAE,cAAc;EAC3B,QAAQ,EAAE,aAAa;EACvB,OAAO,EAAE,eAAe;EACxB,MAAM,EAAE,YAAY;EACpB,UAAU,EAAE;AACd,CAAC;AAED,eAAeP,mBAAmB;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}