{"ast":null,"code":"var _jsxFileName = \"/home/oscar/M\\xFAsica/Hidroponia/frontend/src/components/luzSensor.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useContext } from 'react';\nimport ReactApexChart from 'react-apexcharts';\nimport SensorContext from '../context/sensorContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LuzComp = () => {\n  _s();\n  const [iluminacion, setIluminacion] = useState(null);\n  const sensorData = useContext(SensorContext);\n  useEffect(() => {\n    if (!sensorData) return;\n    const data = sensorData.find(item => item.lightIntensity !== undefined);\n    if (!data) return;\n    const V = data.lightIntensity;\n    const A = 1000;\n    const B = 15;\n    const Rc = 10;\n    const iluminacionCalculada = (V * A * 10 / (B * Rc * (1024 - V))).toFixed(2);\n    setIluminacion(iluminacionCalculada);\n  }, [sensorData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: iluminacion !== null ? /*#__PURE__*/_jsxDEV(ReactApexChart, {\n      options: {\n        chart: {\n          type: 'bar',\n          height: 350\n        },\n        plotOptions: {\n          bar: {\n            horizontal: false\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        xaxis: {\n          categories: ['Iluminación'],\n          labels: {\n            show: true\n          }\n        },\n        yaxis: {\n          title: {\n            text: 'Iluminación'\n          }\n        }\n      },\n      series: [{\n        name: 'Iluminación',\n        data: [iluminacion]\n      }],\n      type: \"bar\",\n      height: 300\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(LuzComp, \"kNam90CusB4zebnnXUM3/HkHUQo=\");\n_c = LuzComp;\nexport default LuzComp;\nvar _c;\n$RefreshReg$(_c, \"LuzComp\");","map":{"version":3,"names":["useState","useEffect","useContext","ReactApexChart","SensorContext","jsxDEV","_jsxDEV","LuzComp","_s","iluminacion","setIluminacion","sensorData","data","find","item","lightIntensity","undefined","V","A","B","Rc","iluminacionCalculada","toFixed","children","options","chart","type","height","plotOptions","bar","horizontal","dataLabels","enabled","xaxis","categories","labels","show","yaxis","title","text","series","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/oscar/Música/Hidroponia/frontend/src/components/luzSensor.jsx"],"sourcesContent":["import { useState, useEffect, useContext } from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport SensorContext from '../context/sensorContext';\r\n\r\nconst LuzComp = () => {\r\n  const [iluminacion, setIluminacion] = useState(null);\r\n  const sensorData = useContext(SensorContext);\r\n\r\n  useEffect(() => {\r\n    if (!sensorData) return;\r\n\r\n    const data = sensorData.find(item => item.lightIntensity !== undefined);\r\n\r\n    if (!data) return;\r\n\r\n    const V = data.lightIntensity;\r\n    const A = 1000;\r\n    const B = 15;\r\n    const Rc = 10;\r\n\r\n    const iluminacionCalculada = ((V * A * 10) / ((B * Rc) * (1024 - V))).toFixed(2);\r\n    \r\n\r\n    setIluminacion(iluminacionCalculada);\r\n  }, [sensorData]);\r\n\r\n  return (\r\n    <div>\r\n      {iluminacion !== null ? (\r\n        <ReactApexChart\r\n          options={{\r\n            chart: {\r\n              type: 'bar',\r\n              height: 350,\r\n            },\r\n            plotOptions: {\r\n              bar: {\r\n                horizontal: false,\r\n              },\r\n            },\r\n            dataLabels: {\r\n              enabled: false,\r\n            },\r\n            xaxis: {\r\n              categories: ['Iluminación'],\r\n              labels: {\r\n                show: true,\r\n              },\r\n            },\r\n            yaxis: {\r\n              title: {\r\n                text: 'Iluminación',\r\n              },\r\n            },\r\n          }}\r\n          series={[{\r\n            name: 'Iluminación',\r\n            data: [iluminacion],\r\n          }]}\r\n          type=\"bar\"\r\n          height={300}\r\n        />\r\n      ) : (\r\n        <p>Cargando...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LuzComp;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACvD,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,aAAa,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAMW,UAAU,GAAGT,UAAU,CAACE,aAAa,CAAC;EAE5CH,SAAS,CAAC,MAAM;IACd,IAAI,CAACU,UAAU,EAAE;IAEjB,MAAMC,IAAI,GAAGD,UAAU,CAACE,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,cAAc,KAAKC,SAAS,CAAC;IAEvE,IAAI,CAACJ,IAAI,EAAE;IAEX,MAAMK,CAAC,GAAGL,IAAI,CAACG,cAAc;IAC7B,MAAMG,CAAC,GAAG,IAAI;IACd,MAAMC,CAAC,GAAG,EAAE;IACZ,MAAMC,EAAE,GAAG,EAAE;IAEb,MAAMC,oBAAoB,GAAG,CAAEJ,CAAC,GAAGC,CAAC,GAAG,EAAE,IAAMC,CAAC,GAAGC,EAAE,IAAK,IAAI,GAAGH,CAAC,CAAC,CAAC,EAAEK,OAAO,CAAC,CAAC,CAAC;IAGhFZ,cAAc,CAACW,oBAAoB,CAAC;EACtC,CAAC,EAAE,CAACV,UAAU,CAAC,CAAC;EAEhB,oBACEL,OAAA;IAAAiB,QAAA,EACGd,WAAW,KAAK,IAAI,gBACnBH,OAAA,CAACH,cAAc;MACbqB,OAAO,EAAE;QACPC,KAAK,EAAE;UACLC,IAAI,EAAE,KAAK;UACXC,MAAM,EAAE;QACV,CAAC;QACDC,WAAW,EAAE;UACXC,GAAG,EAAE;YACHC,UAAU,EAAE;UACd;QACF,CAAC;QACDC,UAAU,EAAE;UACVC,OAAO,EAAE;QACX,CAAC;QACDC,KAAK,EAAE;UACLC,UAAU,EAAE,CAAC,aAAa,CAAC;UAC3BC,MAAM,EAAE;YACNC,IAAI,EAAE;UACR;QACF,CAAC;QACDC,KAAK,EAAE;UACLC,KAAK,EAAE;YACLC,IAAI,EAAE;UACR;QACF;MACF,CAAE;MACFC,MAAM,EAAE,CAAC;QACPC,IAAI,EAAE,aAAa;QACnB7B,IAAI,EAAE,CAACH,WAAW;MACpB,CAAC,CAAE;MACHiB,IAAI,EAAC,KAAK;MACVC,MAAM,EAAE;IAAI;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,gBAEFvC,OAAA;MAAAiB,QAAA,EAAG;IAAW;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAClB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrC,EAAA,CA/DID,OAAO;AAAAuC,EAAA,GAAPvC,OAAO;AAiEb,eAAeA,OAAO;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}